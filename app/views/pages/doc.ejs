<!DOCTYPE html>
<html lang="en">
<head>
    <%- include ../partials/head %>
</head>
<body class="container">

<header>
    <%- include ../partials/header %>
</header>

<main>
    <div class="jumbotron">
        
        
        <h1><%=title%></h1>
        <p><%=subtitle%></p><br>
        <h2>Regras</h2>
        <ul>
            <li>Somente UM nickname pode existir</li>
            <li>O nickname deve ter no m√°ximo 30 caracteres</li>
            <li>A bio deve ter no m√°ximo 100 caracteres</li>
        </ul>
        <p>OBS* Estas regras devem ser seguidas √† risca!</p>
        <h2>Router</h2>
        <h3>- Resumo</h3>
        <p>Usei o expressjs e foi tudo muito simples a constru√ß√£o de rotas com ele, usando o Design Pattern `MVC` (Model, View and Controller). As rotas est√£o na pasta `app/controller`, ainda falta uma organizada a mais, para separar as rotas propriamente ditas das "funcoes", no caso `DELETE` e `PUT`.</p>
        <h3>- Arquivos</h3>
        <h5>- `app/controller/home.js`</h5>
        <p>Este arquivo √© o respons√°vel pela pagina inicial da aplica√ß√£o, a sua principal fun√ß√£o e realizar o `POST`, no caso seria a cria√ß√£o de um novo usu√°rio, mas n√£o √© somente isso, ele faz a compara√ß√£o com outros elementos dentro database, por isso, usa-se tamb√©m o m√©todo `GET` para fazer a parte l√≥gica.</p>
        <h5>- `app/controller/data.js`</h5>
        <p>Depois que temos um usu√°rio registrado, os dados dentro do MongoDB, s√£o extra√≠dos usando o m√©todo `GET`(a intera√ß√£o com o MongoDB √© feita com o Mongoose), este arquivo √© o respons√°vel pelo redirecionamento para rota de um ID espec√≠fico, sa√≠ndo do arquivo `data.ejs` para o `dataUnique.ejs`, sem contar a caixa de pesquisa, em que usa-se o query.</p>
        <h5>- `app/controller/doc.js`</h5>
        <p>Bom... Voc√™ j√° deve desconfiar o que ela faz, usando o metodo `GET` mas apenas para um pequeno render, por que como n√≥s usamos p√°ginas modularizadas, temos que est√° destribuindo "props" para elas terem valores e preencherem os itens, como por exemplo a palavra "Documenta√ß√£o", ela √© um `< % = title % > `, mas que dentro do arquivo doc recebe uma valor para ser retornada no arquivo ".ejs", este conceito se aplica √† todos os outrs itens sitados anteriormente.</p>
        <h5>- `app/controller/deleteUser.js` && `app/controller/updateUser.js`</h5>
        <p>Que bom que ainda est√° lendo isso, chegamos nos dois arquivos que usam de metodos muito importantes, o `PUT` e o `DELETE`, quando sa√≠mos da rota `data/:id`, ela nos redireciona para duas poss√≠veis escolhas "Editar" e "Deletar", em que se encontram no `updateUser.js` e `deleteUser.js` respectivamente, para usa-los, temos que importar o `method-override` no meu caso estou usando a vers√£o ^3.0.0, com tudo isso faremos remo√ß√µes e modifica√ß√µes, sendo as modifica√ß√µes uma parte mais chatinha de colocar nossa logica na aplica√ß√£o seguindo nossas regras.</p>
        <h5>- `app.js`</h5>
        <p>Este e o arquivo principal, ele √© o respons√°vel por conectar tudo que usaremos, nas pastas views, controller e os models.</p>
        <h2>FAQs</h2>
        <h4>- Como adicionar um item no database?</h4>
        <ul>
            <li>V√° para pagina Home</li>
            <li>Insira seus dados corretamente no formul√°rio</li>
            <li>Clique no bot√£o `Submit`</li>
            <li>Voa l√°üéâ, seus dados ja podem ser consultados na rota `/data`</li>
        </ul>
        <h4>- Como fa√ßo para editar um item no database?</h4>
        <ul>
            <li>Clique no item Data na navbar</li>
            <li>Selecione o item que queira modificar</li>
            <li>Clique no bot√£o `Editar`</li>
            <li>E agora voc√™ pode modificar o que quiser</li>
            <li>Clique no bot√£o confirmar e pronto o item desejado ja foi modificado üòâ</li>
        </ul>
        <h4>- Como fa√ßo para deletar um item no database?</h4>
        <ul>
            <li>Clique no item Data na navbar</li>
            <li>Selecione o item que queira deletar</li>
            <li>Clique no bot√£o `Deletar`</li>
            <li>ATEN√á√ÉO‚ùó‚ùó‚ùó O ITEM QUANDO DELETADO N√ÉO PODE MAIS SER RECUPERADO</li>
        </ul>
        <h2>Ferramentas usadas:</h2>
        <ul>
            <p>Mongoose <a href="https://mongoosejs.com/docs/guide.html" target="_blank"> | Abrir Doc</a></p>
            <p>MongoDB <a href="https://docs.mongodb.com/" target="_blank"> | Abrir Doc</a></p>
            <p>nodemon <a href="https://nodemon.io/" target="_blank"> | Abrir Doc</a></p>
            <p>Expressjs <a href="https://expressjs.com/en/guide/routing.html" target="_blank"> | Abrir Doc</a></p>
            <p>request <a href="https://www.npmjs.com/package/request" target="_blank"> | Abrir Doc</a></p>
            <p>Heroku <a href="https://circleci.com/docs/?utm_source=google&utm_medium=cpc&utm_content=docs&utm_campaign=sitelinkDocs&gclid=Cj0KCQjw2tCGBhCLARIsABJGmZ7Q9doxkThadrBOGJD7FARqVgGL5D-C-deNRsJOGjqMYkhsEQ9cKmAaAhP0EALw_wcB" target="_blank"> | Abrir Doc</a></p>
            <p>ejs <a href="https://ejs.co/#docs" target="_blank"> | Abrir Doc</a></p>
        </ul>
        <br>
        <br>
        <br>
        <h4>Feito por: Andr√© da Silva Freitas</h4>
        <a href="https://www.linkedin.com/in/andresilvafreitas/">Linkedin</a> |
        <a href="https://github.com/andrrff">Github</a>
        <br>
        <br>
        <br>
        <a href="/">Voltar ao in√≠cio ‚Ü©</a>

        
    </div>
</main>

<footer>
    <%- include ../partials/footer %>
</footer>

</body>
</html>